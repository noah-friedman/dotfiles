# Source iTerm2 integration script if it exists
if ! [ -z "$ITERM_SESSION_ID" ] && [ -e /Users/speelbarrow/.iterm2_shell_integration.zsh ]; then
        source /Users/speelbarrow/.iterm2_shell_integration.zsh
fi

# Set EDITOR environment variable and `vim` command alias if Neovim found
if [ -x `command -v nvim` ]; then
  export EDITOR='nvim'
  alias vim='nvim'
fi

# Docker convenience commands
function docker {
	case "$1" in
		disposable)
			command docker run --rm -it --name disposable ${@[@]:2}
			;;
		images-grep)
			command docker images -a --format 'table {{.Repository}}:{{.Tag}} {{.ID}}' | tail -n +2 | sed -nE "s/^$2.* ([A-z0-9]+)$/\\1/p"
			;;
		ps-grep)
			command docker ps -a --format 'table {{.Names}} {{.ID}}' | tail -n +2 | sed -nE "s/^$2.* ([A-z0-9]+)$/\\1/p"
			;;
		rmi-grep)
			command docker rmi $(docker images-grep $2)
			;;
		rm-grep)
			command docker rm $(docker ps-grep $2)
			;;
                *sh)
                        command docker exec -it ${@[@]:2} $1
                        ;;
		*)
			command docker "$@"
			;;
	esac
}

# Add completion for custom docker subcommands
function _docker-custom {
        case $words[2] in
                disposable)
                        export words=( "docker" "run" "${words[@]:2}" )
                        ;;
                *sh)
                        export words=( "docker" "exec" "-it" "${words[@]:2}" )
                        ;;
        esac
	if [ "${words[2]}" = "disposable" ]; then
		export words=( "docker" "run" ${words[@]:2} )
	fi
	_docker
}
compdef _docker-custom docker

# Add other aliases/functions (even if the commands aren't there, they won't break anything)
alias ccmake="ccmake -S . -B build"
alias cdgr='cd $(git rev-parse --show-toplevel)'

function z {
	local ignore=".git|Icon"
        if [ -e $HOME/.ezaignore ]; then
            ignore+="|$(cat $HOME/.ezaignore | grep -Ev -e '^#' | grep -Ev '^( |\t)*$' | tr '\n' '|' | sed -E 's/\/\|/|/g' | sed -E 's/(^|\|)\//\1/g' | sed -E 's/\|$//')"
        fi

	eza -l --git --icons --header --git-ignore --ignore-glob="$ignore" $@
}
alias za='z -a'
alias zaa='z -a --ignore-glob " "'
alias zz='za --tree --level 5'
alias zza='zz --ignore-glob " "'

# Add completion to expand aliases
zstyle ':completion:*' completer _expand_alias _complete _ignored

# Set KiTTY ssh alias if we're in KiTTY
[ -n "$KITTY_PID" ] && alias ssh="kitty +kitten ssh"

return 0
