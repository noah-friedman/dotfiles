# Source iTerm2 integration script if it exists
test -e /Users/speelbarrow/.iterm2_shell_integration.zsh && source /Users/speelbarrow/.iterm2_shell_integration.zsh || true

# Set EDITOR environment variable and `vim` command alias if Neovim found
if [ -x `command -v nvim` ]; then
  export EDITOR='nvim'
  alias vim='nvim'
fi

# Add other aliases/functions (even if the commands aren't there, they won't break anything)
function docker {
	case "$1" in
		"disposable")
			command docker run --rm -it --name disposable ${@[@]:2}
			;;
		"images-grep")
			command docker images -a --format 'table {{.Repository}}:{{.Tag}} {{.ID}}' | tail -n +2 | sed -nE "s/^$2.* ([A-z0-9]+)$/\\1/p"
			;;
		"ps-grep")
			command docker ps -a --format 'table {{.Names}} {{.ID}}' | tail -n +2 | sed -nE "s/^$2.* ([A-z0-9]+)$/\\1/p"
			;;
		"rmi-grep")
			command docker rmi $(docker images-grep $2)
			;;
		"rm-grep")
			command docker rm $(docker ps-grep $2)
			;;
		*)
			command docker "$@"
			;;
	esac
}
function _docker-disposable {
	if [ "${words[2]}" = "disposable" ]; then
		export words=( "docker" "run" ${words[@]:2} )
	fi
	_docker
}
compdef _docker-disposable docker

alias ccmake="ccmake -S . -B 'build/'"
alias cdgr='cd $(git rev-parse --show-toplevel)'

return 0
